# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Run Tests

on:
  push:
  schedule:
    - cron:  '0 16 * * *'
  
jobs:
  
  build:

    runs-on: ${{ matrix.os }}
    services:
      mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: test
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.16]
    env:
      MYSQL_DATABASE: test
      MYSQL_USER: root
      MYSQL_PASSWORD: test
      MYSQL_HOST: '127.0.0.1'
      DB_DIALECT: mysql
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(/usr/local/lib/node_modules/yarn/bin/yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install dependencies
      run: yarn install
    - name: Run tests
      run: yarn test 
    - name: Create coverage report
      run: yarn coverage
    # Uncomment after setting CODECOV_TOKEN in your repository
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v1
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #     directory: ./coverage
